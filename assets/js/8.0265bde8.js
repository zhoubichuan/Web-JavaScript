(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{173:function(e,t,r){"use strict";r.r(t);var v=r(0),a=Object(v.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"一-种数据类型区别及相互转换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-种数据类型区别及相互转换"}},[e._v("#")]),e._v(" 一.种数据类型区别及相互转换")]),e._v(" "),r("h2",{attrs:{id:"javascript-的基本数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript-的基本数据类型"}},[e._v("#")]),e._v(" JavaScript 的基本数据类型")]),e._v(" "),r("ul",[r("li",[e._v("基本数据类型：Number、String、Boolean、Undefined、Null")]),e._v(" "),r("li",[e._v("object 是 JavaScript 中所有对象的父对象")]),e._v(" "),r("li",[e._v("数据封装类对象：object、Array、Boolean、Number 和 String")]),e._v(" "),r("li",[e._v("其他对象：Function、Arguments、Math、Data、Error 和 RegExp")]),e._v(" "),r("li",[e._v("其他数据类型：Symbol")])]),e._v(" "),r("h2",{attrs:{id:"数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[e._v("#")]),e._v(" 数组")]),e._v(" "),r("ul",[r("li",[e._v("map\n遍历数组，返回回调返回值组成的新数组")]),e._v(" "),r("li",[e._v("forEach\n无法 break,可以用 try/catch 中 throw new Error 来停止")]),e._v(" "),r("li",[e._v("filter\n过滤")]),e._v(" "),r("li",[e._v("some\n有一项返回 true，则整体为 true")]),e._v(" "),r("li",[e._v("every\n有一项返回 false，则整体为 false")]),e._v(" "),r("li",[e._v("join\n通过制定连接符生成字符串")]),e._v(" "),r("li",[e._v("push/pop\n末尾推入和弹出，改变原数组，返回推入/弹出项")]),e._v(" "),r("li",[e._v("unshift/shift\n头部推入和弹出，改变原数组，返回操作项")]),e._v(" "),r("li",[e._v("sort(fn)/reverse\n排序与反转，改变原数组")]),e._v(" "),r("li",[e._v("concat\n连接数组，不影响原数组，浅拷贝")]),e._v(" "),r("li",[e._v("slice(start,end)\n返回截断后的新数组，不改变原数组")]),e._v(" "),r("li",[e._v("splice(start,number,value...)\n返回删除元素组成的数组，value 为插入项，改变原数组")]),e._v(" "),r("li",[e._v("indexOf/lastIndexOf(value,fromIndex)\n查找数组项，返回对应的下标")]),e._v(" "),r("li",[e._v("reduce/reduceRight(fn(pre,cur),defaultPrev)\n两两执行，prev 为上次化简函数的 return 值，cur 为当前值（从第二项开始）")])])])}],!1,null,null,null);t.default=a.exports}}]);